{
  "_args": [
    [
      {
        "raw": "rx-angular",
        "scope": null,
        "escapedName": "rx-angular",
        "name": "rx-angular",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\devono\\Desktop\\Desktop\\Solr_stuff\\solr"
    ]
  ],
  "_from": "rx-angular@latest",
  "_id": "rx-angular@1.1.3",
  "_inCache": true,
  "_location": "/rx-angular",
  "_nodeVersion": "5.4.0",
  "_npmUser": {
    "name": "mattpodwysocki",
    "email": "matthew.podwysocki@gmail.com"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rx-angular",
    "scope": null,
    "escapedName": "rx-angular",
    "name": "rx-angular",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/rx-angular/-/rx-angular-1.1.3.tgz",
  "_shasum": "eac48c03ea035361a1361b537f388899c52939f8",
  "_shrinkwrap": null,
  "_spec": "rx-angular",
  "_where": "C:\\Users\\devono\\Desktop\\Desktop\\Solr_stuff\\solr",
  "author": {
    "name": "Microsoft"
  },
  "bugs": {
    "url": "https://github.com/Reactive-Extensions/rx.angular.js/issues"
  },
  "dependencies": {
    "rx": "*"
  },
  "description": "Library for bridging between RxJS and AngularJS.",
  "devDependencies": {
    "angular": "^1.4.9",
    "grunt": "*",
    "grunt-cli": "*",
    "grunt-contrib-concat": "*",
    "grunt-contrib-jshint": "*",
    "grunt-contrib-qunit": "*",
    "grunt-contrib-uglify": "*",
    "grunt-ng-annotate": "^0.10.0",
    "load-grunt-tasks": "*",
    "tsd": "^0.6.5"
  },
  "directories": {},
  "dist": {
    "shasum": "eac48c03ea035361a1361b537f388899c52939f8",
    "tarball": "https://registry.npmjs.org/rx-angular/-/rx-angular-1.1.3.tgz"
  },
  "gitHead": "68fb14d3188d4aa5a33571e13c101a9e9a779567",
  "homepage": "https://github.com/Reactive-Extensions/rx.angular.js",
  "jam": {
    "main": "dist/rx.angular.js"
  },
  "keywords": [
    "Reactive",
    "FRP",
    "Rx",
    "RxJS",
    "AngularJS",
    "Angular"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mattpodwysocki",
      "email": "matthew.podwysocki@gmail.com"
    }
  ],
  "name": "rx-angular",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/Reactive-Extensions/rx.angular.js.png)](https://travis-ci.org/Reactive-Extensions/rx.angular.js)\n[![GitHub version](http://img.shields.io/github/tag/reactive-extensions/rx.angular.js.svg)](https://github.com/Reactive-Extensions/rx.angular.js)\n[![NPM version](http://img.shields.io/npm/v/rx-angular.svg)](https://npmjs.org/package/rx-angular)\n[![Downloads](http://img.shields.io/npm/dm/rx-angular.svg)](https://npmjs.org/package/rx-angular)\n[![NuGet](http://img.shields.io/nuget/v/RxJS-Bridges-Angular.svg)](http://www.nuget.org/packages/RxJS-Bridges-Angular/)\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n# `rx.angular.js` - Reactive Extensions Bindings for AngularJS\n\nThis library serves as a bridge between the [Reactive Extensions for JavaScript (RxJS)](https://github.com/Reactive-Extensions/RxJS) and [AngularJS](http://angularjs.org/).\n\nWith this library, you will be able to do such things as easily watch values as they change, as observable sequences such as:\n\n```js\nangular.module('example', ['rx'])\n  .controller('AppCtrl', function($scope, observeOnScope) {\n\n    // Listen for changes on the name\n    observeOnScope($scope, 'name').subscribe(function(change) {\n      $scope.observedChange = change;\n      $scope.newValue = change.newValue;\n      $scope.oldValue = change.oldValue;\n    });\n  });\n```\n\nAnd with your HTML markup you can use it like this:\n```html\n<div class=\"container\" ng-app=\"example\" ng-controller=\"AppCtrl\">\n  <h2>Reactive Angular</h2>\n  <ul class=\"list-unstyled\">\n    <li>observedChange {{observedChange}}</li>\n    <li>newValue: {{newValue}}</li>\n    <li>oldValue: {{oldValue}}</li>\n  </ul>  \n\n  <input type=\"text\" ng-model=\"name\" />\n</div>\n```\nAnother example is where we can create an Observable sequence from such things ng-click expressions where we can search Wikipedia:\n\n```js\nangular.module('example', ['rx'])\n  .controller('AppCtrl', function($scope, $http, rx) {\n\n    function searchWikipedia (term) {\n      return rx.Observable\n        .fromPromise($http({\n          url: \"http://en.wikipedia.org/w/api.php?&callback=JSON_CALLBACK\",\n          method: \"jsonp\",\n          params: {\n            action: \"opensearch\",\n            search: term,\n            format: \"json\"\n          }\n        }))\n        .map(function(response){ return response.data[1]; });             \n    }\n\n    $scope.search = '';\n    $scope.results = [];\n\n    /*\n      Creates a \"click\" function which is an observable sequence instead of just a function.\n    */\n    $scope.$createObservableFunction('click')\n      .map(function () { return $scope.search; })\n      .flatMapLatest(searchWikipedia)\n      .subscribe(function(results) {\n        $scope.results = results;\n      });\n  });\n```\n\nAnd the HTML markup you can simply just use a ng-click directive much as you have before, but now it is an Observable sequence.\n```html\n<div class=\"container\" ng-app=\"example\" ng-controller=\"AppCtrl\">\n\n  <input type=\"text\" ng-model=\"search\">\n  <button ng-click=\"click()\">Search</button>\n\n  <ul>\n    <li ng-repeat=\"result in results\">{{result}}</li>\n  </ul>\n\n</div>\n```\nThis only scratches the surface of what is possible when you combine the two libraries together.\n\n## Community Examples ##\n\nThere are a growing number of community samples using RxJS and Angular.js, including:\n- [ninya.io](http://www.ninya.io/) - [Code](https://github.com/ninya-io/ninya.io)\n\n## Dive In! ##\n\nPlease check out:\n\n - [Our Code of Conduct](https://github.com/Reactive-Extensions/RxJS/tree/master/code-of-conduct.md)\n - [The full documentation](https://github.com/Reactive-Extensions/rx.angular.js/tree/master/docs)\n - [Our many great examples](https://github.com/Reactive-Extensions/rx.angular.js/tree/master/examples)\n - [Our design guidelines](https://github.com/Reactive-Extensions/RxJS/tree/master/doc/designguidelines)\n - [Our contribution guidelines](https://github.com/Reactive-Extensions/RxJS/tree/master/contributing.md)\n - [Our complete Unit Tests](https://github.com/Reactive-Extensions/rx.angular.js/tree/master/tests)\n\n## Getting Started\n\nThere are a number of ways to get started with RxJS.\n\n### Download the Source\n```bash\n$ git clone https://github.com/Reactive-Extensions/rx.angular.js.git\n$ cd ./rx.angular.js\n```\n### Installing with [NPM](https://npmjs.org/)\n```bash\nnpm install rx-angular\nnpm install -g rx-angular\n```\n### Installing with [Bower](http://bower.io/)\n```bash\nbower install angular-rx\n```\n### Installing with [Jam](http://jamjs.org/)\n```bash\njam install rx-angular\n```\n### Installing All of RxJS via [NuGet](http://nuget.org/)\n```PowerShell\nPM> Install-Package RxJS-Bridges-Angular\n```\n## License ##\n\nCopyright (c) Microsoft.  All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you\nmay not use this file except in compliance with the License. You may\nobtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing permissions\nand limitations under the License.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Reactive-Extensions/rx.angular.js.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "title": "The Reactive Extensions Bindings for the AngularJS.",
  "version": "1.1.3"
}
